version: 2.1

# Define the jobs we want to run for this project
jobs:
  lint-test:
    # Primary container image where all commands run
    docker:
      - image: cimg/node:20.0.0
    # service container image
      - image: cimg/mariadb:10.10.3
        name: db
        environment:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_DATABASE: tododot
          MARIADB_USER: todo-admin
          MARIADB_PASSWORD: admin-pw
    steps:
      - checkout
      - run: 
          name: "Install dependencies"
          command: npm install
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for db
          command: dockerize -wait tcp://db:3306 -timeout 1m
      - run: 
          name: connect to db test
          command: |
            sudo apt-get update && sudo apt-get install -y mysql-client
            mysql -h db -u todo-admin -padmin-pw -D tododot -e "select 1;" -v
      - run:
          name: "Linting"
          command: npm run lint
      - run: 
          name: "Testing"
          command: npm run test

  build:
    environment: 
      IMAGE_NAME: cicltechnikum/conint-sem-backend
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: "Building"
          command: docker build -t $IMAGE_NAME:latest .

  deliver:
    environment:
      IMAGE_NAME: conint-sem-backend
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - setup-remote-docker
      - run: 
          name: "Deliver - Publish to docker hub"
          command: | 
          echo $DOCKER_HUB_PW | docker login -u cicltechnikum --password-stdin
          docker push $IMAGE_NAME:latest

  deploy:
    docker:
      - image: cimg/base:2023.04
    steps:
      - checkout
      - run: 
          name: "Deploy"
          command: echo "deploy to aws ... "

# Orchestrate our job run sequence
workflows:
  version: 2
  lint-test-build-deliver-deploy:
    jobs:
      - lint-test
      - build:
          requires:
            - lint-test
      - deliver:
          requires:
            - build
      - deploy:
          requires:
            - deliver
